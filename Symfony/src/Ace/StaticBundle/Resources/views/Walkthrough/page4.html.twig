{% extends 'AceStaticBundle:Walkthrough:skeleton.html.twig' %}


{% block javascripts %}
    <script type="text/javascript" src="{{ path("AceGenericBundle_embedded_compilerflasher_js") }}"></script>
    <script type="text/javascript">

        var plugin_check_id = window.setInterval(function () {
            if ($(".alert").length > 0) {
                window.clearInterval(plugin_check_id);
                window.location.replace("{{ path("AceStaticBundle_walkthrough", {"page":2}) }}");
            }
        }, 500);

        $(document).ready(function () {
            $("#uploadusb").removeClass("btn");
            $("#uploadusb").addClass("huge-button");
            $("#ports_div").hide();
            $("#ports_div").removeClass("input-append");
            $("#upload_icon").remove();
        });

        function start()
        {
            $("#verify_div").hide(1000);
            $("#start_button").hide(1000);
            if (window.selectedBoard["name"].indexOf("Digispark") === -1)
            {
                displayMessage="<p>Please connect your device to your computer. If you have already connected your device, please disconnect it, wait a few seconds, and then connect it again.</p>";
                if (navigator.userAgent.toLowerCase().indexOf("windows")!==-1){
                        displayMessage+="<p>Your device should now show up under the \"Ports (COM & LPT)\" section of the Device Manager List. If not, it is listed under Other Devices and you need to use Update Driver Software to configure it correctly.</p>";
                        window.plugin.deviceManager();
                }
                $("#step_output_text").hide(200).html(displayMessage).show(1000);

                window.files = {"Arduino Generic Blink.ino":"void setup() { pinMode(13, OUTPUT); pinMode(9, OUTPUT); } void loop() { digitalWrite(13, HIGH); digitalWrite(9, HIGH); delay(1000); digitalWrite(13, LOW); digitalWrite(9, LOW); delay(1000); }"}
                if(typeof portsAvail === "undefined")
                    portsAvail = [""];
                var oldPortsAvail = portsAvail;
                window.device_detection =  window.setInterval(function(){
                    if(oldPortsAvail.length < portsAvail.length)
                    {
                        var tempPortsAvail = portsAvail.slice(0);
                        for (i = 0; i < oldPortsAvail.length; i++)
                            for (j = 0; j < tempPortsAvail.length; j++)
                                if (oldPortsAvail [i] == tempPortsAvail[j]) {
                                    tempPortsAvail.splice(j, 1);
                                    j--;
                                }
                        $("#ports").val(tempPortsAvail[0]);
                        window.tutorial_selected_port = tempPortsAvail[0];
                        $("#step_output_text").hide(200).html("<p>You are ready! Please hit the USB Flash button to flash your device for the first time.</p>").show(1000);
                        $("#ports_div").show(1000);
                    }
                    else if(oldPortsAvail.length > portsAvail.length)
                    {
                            if((typeof portslist.options[portslist.selectedIndex] === "undefined") || (window.tutorial_selected_port != portslist.options[portslist.selectedIndex].text))
                            {
                                $("#step_output_text").hide(200).html("<p>You just disconnected your device. Please connect your device to your computer. If you have already connected your device, please disconnect it, wait a few seconds, and then connect it again.</p>").show(1000);
                                $("#ports_div").hide();
                            }
                    }
                    oldPortsAvail = portsAvail;
                }, 200);
            }
            else
            {
                $("#step_output_text").html("<p>Click 'USB Flash' and get ready to connect your Digispark when you are asked to</p>").show(1000);
                $("#ports_div").show(1000);
                window.files = {"Digispark Blink.ino":"void setup() { pinMode(0, OUTPUT); pinMode(1, OUTPUT); } void loop() { digitalWrite(0, HIGH); digitalWrite(1, HIGH); delay(1000); digitalWrite(0, LOW); digitalWrite(1, LOW); delay(1000); }"}
            }

            window.setInterval(function () {
                if ($("#operation_output").text() == "Digispark Flashed" || $("#operation_output").text() == "Upload successful")
                {
                    $("#operation_output").text($("#operation_output").text()+". You should now see a blinking LED on your device. Congratulations, you are done!");
	                $("#next_button").show();
	                $("#step_output_text").hide();
	                $("#ports_div").hide();
	                window.clearInterval(window.device_detection);
                }
            }, 100);
        }
    </script>
{% endblock %}

{% block stylesheets %}
    <style>
        #plugin_div
        {
            width: 100%
        }

        #ports_div
        {
            width:100%
        }

        #ports {
            visibility: hidden;
            width: 0px;
            height: 0px;
            position: fixed;
        }

        #boards {
            display: block;
            margin: auto;
            width: 70%;
            font-size: 1.2em;
        }

        .alert {
            font-size: 30px;
            line-height: 50px;
            text-align: center;
        }

        #operation_output
        {
            font-size: 30px;
            line-height: 50px;
        }

    </style>
    {% include 'AceStaticBundle:Walkthrough:huge_button_style.html.twig' %}
{% endblock %}

{% block page_content %}
    <h3>Testing the device</h3>
    <p>You should now have all the necessary requirements to actually talk to your device.
        We will now make sure your computer can talk to your device.</p>
    <div id="step_output_text"><p>Please select your board from the list below and then click on 'Start'</p></div>
    <div id="cb_cf" data-sections="usbflash"></div>
    <button id="start_button" onclick="start();" class="huge-button">Start</button>
	<a id="next_button" href="{{ path("AceStaticBundle_walkthrough", {"page":page+1}) }}" class="huge-button" style="display: none;">Next!</a>
{% endblock %}